load(
  "//toolchain:toolchain_feature.bzl",
  "toolchain_feature",
  "toolchain_feature_group",
  "toolchain_feature_set")

package(default_visibility = ["//visibility:public"])

# Include this feature if the linker supports the --start_lib and
# --end_lib flags.
toolchain_feature(
  name = "supports_start_end_lib",
  enabled = True,
)

toolchain_feature(
  name = "pthread",
  enabled = True,
  copts = [
    "-pthread",
  ],
)

toolchain_feature(
  name = "no_legacy_features",
  enabled = True,
)

toolchain_feature(
  name = "verbose",
  copts = [
    "--verbose",
  ],
)

toolchain_feature(
  name = "pedantic",
  enabled = True,
  copts = [
    "-Wall",
    "-Werror",
    "-pedantic",
  ],
)

toolchain_feature(
  name = "sections",
  enabled = True,
  copts = [
    "-ffunction-sections",
    "-fdata-sections",
  ],
  linkopts = [
    "-Wl,-gc-sections",
  ],
)

toolchain_feature_group(name = "cxx_standard")

toolchain_feature(
  name = "cxx20",
  enabled = True,
  group = ":cxx_standard",
  cxxopts = [
    "-std=c++20",
  ],
)

toolchain_feature_group(name = "compilation_mode")

toolchain_feature(
  name = "fastbuild",
  group = ":compilation_mode",
  copts = ["-O0"],
)

toolchain_feature(
  name = "dbg",
  group = ":compilation_mode",
  defines = ["NDEBUG"],
  copts = ["-g", "-O0"],
)

toolchain_feature(
  name = "opt",
  group = ":compilation_mode",
  copts = ["-O2"],
)

toolchain_feature_group(name = "linking_mode")

toolchain_feature(
  name = "static_linking_mode",
  group = ":linking_mode",
  linkopts = ["-static"],
)

toolchain_feature(
  name = "dynamic_linking_mode",
  group = ":linking_mode",
)

toolchain_feature_set(
  name = "features",
  deps = [
    ":no_legacy_features",
    ":verbose",
    ":pedantic",
    ":sections",
    ":cxx20",
    ":fastbuild",
    ":dbg",
    ":opt",
    ":static_linking_mode",
    ":dynamic_linking_mode",
  ],
)
