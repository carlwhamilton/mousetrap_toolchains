load(
    "//:toolchain_feature.bzl",
    "toolchain_feature",
    "toolchain_feature_group",
    "toolchain_feature_set",
)

package(default_visibility = ["//visibility:public"])

# Include this feature if the linker supports the --start_lib and
# --end_lib flags.
toolchain_feature(
    name = "no_legacy_features",
    enabled = True,
)

toolchain_feature(
    name = "verbose",
    copts = [
        "--verbose",
    ],
)

toolchain_feature(
    name = "pedantic",
    copts = [
        "-Wall",
        "-Werror",
        "-pedantic",
    ],
    enabled = True,
)

toolchain_feature(
    name = "sections",
    copts = [
        "-ffunction-sections",
        "-fdata-sections",
    ],
    enabled = True,
    linkopts = [
        "-Wl,-gc-sections",
    ],
)

toolchain_feature_group(name = "cxx_standard")

toolchain_feature(
    name = "cxx20",
    cxxopts = [
        "-std=c++20",
    ],
    enabled = True,
    group = ":cxx_standard",
)

toolchain_feature_group(name = "compilation_mode")

toolchain_feature(
    name = "fastbuild",
    copts = ["-O0"],
    group = ":compilation_mode",
)

toolchain_feature(
    name = "dbg",
    copts = [
        "-g",
        "-O0",
    ],
    defines = ["NDEBUG"],
    group = ":compilation_mode",
)

toolchain_feature(
    name = "opt",
    copts = ["-O2"],
    group = ":compilation_mode",
)

toolchain_feature_group(name = "linking_mode")

toolchain_feature(
    name = "static_linking_mode",
    group = ":linking_mode",
    linkopts = ["-static"],
)

toolchain_feature(
    name = "dynamic_linking_mode",
    group = ":linking_mode",
)

toolchain_feature_set(
    name = "features",
    deps = [
        ":cxx20",
        ":dbg",
        ":dynamic_linking_mode",
        ":fastbuild",
        ":no_legacy_features",
        ":opt",
        ":pedantic",
        ":sections",
        ":static_linking_mode",
        ":verbose",
    ],
)
